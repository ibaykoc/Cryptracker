apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "qblmchmmd.com.cryptracker"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShared"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShared"
    }
}

dependencies {
    def lifecycle_version = "1.1.1"
    def koin_version = '1.0.1'
    def mockk_version = '1.8.7'
    def room_version = "1.1.1"
    def paging_version = "1.0.1"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    implementation 'com.android.support:support-annotations:28.0.0'

    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    testImplementation "org.mockito:mockito-core:2.22.0"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.30.0"

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    androidTestImplementation 'com.agoda.kakao:kakao:1.4.0'
    implementation 'com.android.support:recyclerview-v7:27.1.1'

    implementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.2'
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:3.0.2"

    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    implementation 'com.android.support:cardview-v7:27.1.1'

    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    implementation "android.arch.paging:runtime:$paging_version"
    // alternatively - without Android dependencies for testing
    testImplementation "android.arch.paging:common:$paging_version"

}
kotlin {
    experimental {
        coroutines "enable"
    }
}
